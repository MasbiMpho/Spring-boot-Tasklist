name: Build, Test, and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-test-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Start database using Docker Compose
        env:
          POSTGRES_DB: taskdb
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_PORT: 5432
          POSTGRES_VERSION: 17
          APP_PORT: 8080
        run: |
          docker compose -f ./docker-compose.yml up -d db

      - name: Wait for database to be ready
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          for i in {1..30}; do
            if docker exec $(docker ps -qf "name=db") pg_isready -U ${{ secrets.DB_USERNAME }} > /dev/null; then
              echo "Database is ready!"
              break
            else
              echo "Waiting... ($i)"
              sleep 2
            fi
          done

      - name: Build and Test with Maven
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/taskdb
          SPRING_DATASOURCE_USERNAME: ${{ secrets.DB_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }}
          APP_PORT: 8080
        run: |
          mvn clean test -Dspring-boot.run.arguments="--server.port=${APP_PORT}"

      - name: Prepare deployment folder
        run: |
          if [ ! -d "$HOME/tasklist" ]; then
            echo "Folder ~/tasklist not found. Cloning fresh copy..."
            git clone https://github.com/${{ github.repository }} ~/tasklist
          else
            echo "Folder exists. Pulling latest changes..."
            cd ~/tasklist
            git pull origin main
          fi
  
      - name: Create .env file in deployment folder
        run: |
            cat <<EOF > ~/tasklist/.env
            POSTGRES_VERSION=17
            POSTGRES_DB=taskdb
            POSTGRES_USER=${{ secrets.DB_USERNAME }}
            POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }}
            POSTGRES_PORT=5432
            APP_PORT=8080
            EOF
    
      - name: Deploy Spring Boot app with Docker Compose
        run: |
          cd ~/tasklist
          echo "Stopping old containers..."
          docker compose down --remove-orphans || true
          docker rm -f taskdb_db || true 

          echo "Rebuilding and starting containers..."
          docker compose up -d --build

          echo "Deployment complete!"

      - name: Push image to Docker Hub
        run: |
          echo "Tagging image..."
          docker tag tasklist_app:latest ${{ secrets.DOCKER_USERNAME }}/tasklist:latest
          echo "Pushing to Docker Hub..."
          docker push ${{ secrets.DOCKER_USERNAME }}/tasklist:latest
